<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dnk.smart.door.dao.LockDao">
    <sql id="entity">locks</sql>
    <sql id="id">id</sql>
    <sql id="column">id, gatewayId, houseId, uuid, name, password, device, createTime, updateTime</sql>
    <sql id="page">
        <if test="offset >= 0 and limit > 0">
            limit #{offset}, #{limit}
        </if>
    </sql>
    <sql id="search">
        <include refid="entity"/>
        JOIN house ON locks.houseId = house.id
        JOIN unit ON house.unitId = unit.id
        JOIN build ON unit.buildId = build.id
        <where>
            <if test="build != null and build != ''">
                build.name LIKE "%"#{build}"%"
            </if>
            <if test="unit != null and unit != ''">
                AND unit.name LIKE "%"#{unit}"%"
            </if>
            <if test="house != null and house != ''">
                AND house.name LIKE "%"#{house}"%"
            </if>
            <if test="name != null and name != ''">
                AND locks.name LIKE "%"#{name}"%"
            </if>
        </where>
    </sql>

    <insert id="save" keyProperty="id">
        INSERT INTO
        <include refid="entity"/>
        (
        <include refid="column"/>
        )
        VALUES
        (NULL, #{gatewayId}, #{houseId}, UUID(), #{name}, #{password}, #{device}, NULL, NULL)
    </insert>

    <delete id="deleteById">
        DELETE FROM
        <include refid="entity"/>
        WHERE
        <include refid="id"/>
        = #{id}
    </delete>

    <delete id="deleteByEntity">
        DELETE FROM
        <include refid="entity"/>
        WHERE
        <include refid="id"/>
        = #{id}
    </delete>

    <delete id="deleteByIds">
        DELETE FROM
        <include refid="entity"/>
        WHERE
        <include refid="id"/>
        IN
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteByEntities">
        DELETE FROM
        <include refid="entity"/>
        WHERE
        <include refid="id"/>
        IN
        <foreach collection="list" item="entity" open="(" separator="," close=")">
            #{entity.id}
        </foreach>
    </delete>

    <!-- TODO -->
    <update id="update">
        UPDATE
        <include refid="entity"/>
        SET
        <if test="name != null and name != ''">
            name = #{name},
        </if>
        <if test="password != null and password != ''">
            password = #{password},
        </if>
        updateTime = CURRENT_TIMESTAMP
        WHERE
        <include refid="id"/>
        = #{id}
    </update>

    <select id="findById" resultType="Lock">
        SELECT * FROM
        <include refid="entity"/>
        WHERE
        <include refid="id"/>
        = #{id}
    </select>

    <select id="findAll" resultType="Lock">
        SELECT * FROM
        <include refid="entity"/>
        ORDER BY
        <include refid="id"/>
        DESC
    </select>

    <select id="findInterval" resultType="Lock">
        SELECT * FROM
        <include refid="entity"/>
        ORDER BY
        <include refid="id"/>
        DESC
        <include refid="page"/>
    </select>

    <select id="count" resultType="int">
        SELECT COUNT(*) FROM
        <include refid="entity"/>
    </select>

    <select id="findList" resultType="Lock">
        SELECT * FROM
        <include refid="entity"/>
        <where>
            <if test="gatewayId != null and gatewayId > 0">
                gatewayId = #{gatewayId}
            </if>
            <if test="houseId != null and houseId > 0">
                houseId = #{houseId}
            </if>
            <if test="uuid != null and uuid != ''">
                AND uuid = #{uuid}
            </if>
            <if test="name != null and name != ''">
                AND name LIKE "%"#{name}"%"
            </if>
        </where>
        ORDER BY
        <include refid="id"/>
        DESC
        <include refid="page"/>
    </select>

    <select id="findMap" resultType="map">
        SELECT
        locks.*, house.name as house, unit.id as unitId, unit.name as unit, build.id as buildId, build.name as build
        FROM
        <include refid="search"/>
        ORDER BY
        <include refid="id"/>
        DESC
        <include refid="page"/>
    </select>

    <select id="countMap" resultType="int">
        SELECT COUNT(*) FROM
        <include refid="search"/>
    </select>

    <select id="findDevice" resultType="int">
        SELECT device FROM
        <include refid="entity"/>
        WHERE gatewayId = #{gatewayId}
        ORDER BY device ASC
    </select>
</mapper>
