<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dnk.smart.door.dao.StatusDao">
    <sql id="entity">status</sql>
    <sql id="id">id</sql>
    <sql id="column">id, uuid, locked, upLock, backLock, voltage, online, time</sql>
    <sql id="page">
        <if test="offset >= 0 and limit > 0">
            limit #{offset}, #{limit}
        </if>
    </sql>
    <sql id="search">
        <include refid="entity"/>
        JOIN locks ON status.uuid = locks.uuid
        JOIN gateway ON locks.gatewayId = gateway.id
        JOIN unit ON gateway.unitId = unit.id
        JOIN build ON unit.buildId = build.id
        <where>
            <if test="buildId != null and buildId > 0">
                build.id = #{buildId}
            </if>
            <if test="unitId != null and unitId > 0">
                AND unit.id = #{unitId}
            </if>
            <if test="gatewayId != null and gatewayId > 0">
                AND gateway.id = #{gatewayId}
            </if>
        </where>
    </sql>

    <insert id="save">
        INSERT INTO
        <include refid="entity"/>
        (<include refid="column"/>)
        VALUES
        (NULL, #{uuid}, #{locked}, #{upLock}, #{backLock}, #{voltage}, #{online}, #{time})
    </insert>

    <insert id="saves">
        INSERT INTO
        <include refid="entity"/>
        (<include refid="column"/>)
        VALUES
        <foreach collection="list" item="entity" separator=",">
            (NULL, #{entity.uuid}, #{entity.locked}, #{entity.upLock}, #{entity.backLock}, #{entity.voltage}, #{entity.online}, #{entity.time})
        </foreach>
    </insert>

    <delete id="deleteById">
        DELETE FROM
        <include refid="entity"/>
        WHERE
        <include refid="id"/>
        = #{id}
    </delete>

    <delete id="deleteByEntity">
        DELETE FROM
        <include refid="entity"/>
        WHERE
        <include refid="id"/>
        = #{id}
    </delete>

    <delete id="deleteByIds">
        DELETE FROM
        <include refid="entity"/>
        WHERE
        <include refid="id"/>
        IN
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteByEntities">
        DELETE FROM
        <include refid="entity"/>
        WHERE
        <include refid="id"/>
        IN
        <foreach collection="list" item="entity" open="(" separator="," close=")">
            #{entity.id}
        </foreach>
    </delete>

    <update id="update">
        UPDATE
        <include refid="entity"/>
        SET
        locked = #{locked}, upLock = #{upLock}, backLock = #{backLock}, voltage = #{voltage}, online = #{online}, time = #{time}
        WHERE
        <include refid="id"/>
        = #{id}
    </update>

    <select id="findById" resultType="Status">
        SELECT * FROM
        <include refid="entity"/>
        WHERE
        <include refid="id"/>
        = #{id}
    </select>

    <select id="findAll" resultType="Status">
        SELECT * FROM
        <include refid="entity"/>
        ORDER BY
        <include refid="id"/>
        DESC
    </select>

    <select id="findInterval" resultType="Status">
        SELECT * FROM
        <include refid="entity"/>
        ORDER BY
        <include refid="id"/>
        DESC
        limit #{offset}, #{limit}
    </select>

    <select id="count" resultType="int">
        SELECT COUNT(*) FROM
        <include refid="entity"/>
    </select>

    <select id="findList" resultType="Status">
        SELECT locks.* FROM
        <include refid="entity"/>
        JOIN locks ON status.uuid = locks.uuid
        WHERE locks.gatewayId = #{gatewayId}
    </select>

    <select id="findMap" resultType="map">
        SELECT
        status.*, locks.name as locks, gateway.name as gateway
        FROM
        <include refid="search"/>
        ORDER BY gateway.id DESC
        <include refid="page"/>
    </select>

    <select id="countMap" resultType="int">
        SELECT COUNT(*) FROM
        <include refid="search"/>
    </select>
</mapper>
