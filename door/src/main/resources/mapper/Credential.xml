<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dnk.smart.door.dao.CredentialDao">
    <sql id="entity">credential</sql>
    <sql id="id">id</sql>
    <sql id="column">id, tenantId, lockId, type, value, sequence, createTime, updateTime</sql>

    <insert id="save" keyProperty="id">
        INSERT INTO
        <include refid="entity"/>
        (
        <include refid="column"/>
        )
        VALUES
        (NULL, #{tenantId}, #{lockId}, #{type}, #{value}, #{sequence}, NULL, NULL)
    </insert>

    <insert id="saves">
        INSERT INTO
        <include refid="entity"/>
        (
        <include refid="column"/>
        )
        VALUES
        <foreach collection="list" item="entity" separator=",">
            (NULL, #{entity.tenantId}, #{entity.lockId}, #{entity.value}, #{entity.type}, #{entity.sequence}, NULL, NULL)
        </foreach>
    </insert>

    <delete id="deleteById">
        DELETE FROM
        <include refid="entity"/>
        WHERE
        <include refid="id"/>
        = #{id}
    </delete>

    <delete id="deleteByEntity">
        DELETE FROM
        <include refid="entity"/>
        WHERE
        <include refid="id"/>
        = #{id}
    </delete>

    <delete id="deleteByIds">
        DELETE FROM
        <include refid="entity"/>
        WHERE
        <include refid="id"/>
        IN
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteByEntities">
        DELETE FROM
        <include refid="entity"/>
        WHERE
        <include refid="id"/>
        IN
        <foreach collection="list" item="entity" open="(" separator="," close=")">
            #{entity.id}
        </foreach>
    </delete>

    <update id="update">
        UPDATE
        <include refid="entity"/>
        SET
        tenantId = #{tenantId}, lockId = #{lockId}, value = #{value}, type = #{type}, sequence = #{sequence}, updateTime = CURRENT_TIMESTAMP
        WHERE
        <include refid="id"/>
        = #{id}
    </update>

    <select id="findById" resultType="Credential">
        SELECT * FROM
        <include refid="entity"/>
        WHERE
        <include refid="id"/>
        = #{id}
    </select>

    <select id="findAll" resultType="Credential">
        SELECT * FROM
        <include refid="entity"/>
        ORDER BY
        <include refid="id"/>
        DESC
    </select>

    <select id="findInterval" resultType="Credential">
        SELECT * FROM
        <include refid="entity"/>
        ORDER BY
        <include refid="id"/>
        DESC
        limit #{offset}, #{limit}
    </select>

    <select id="count" resultType="int">
        SELECT COUNT(*) FROM
        <include refid="entity"/>
    </select>

    <select id="findList" resultType="Credential">
        SELECT * FROM
        <include refid="entity"/>
        <where>
            <if test="tenantId != null and tenantId > 0">
                tenantId = #{tenantId}
            </if>
            <if test="lockId != null and lockId > 0">
                AND lockId = #{lockId}
            </if>
            <if test="type != null">
                AND type = #{type}
            </if>
            <if test="sequence != null and sequence > 0">
                AND sequence = #{sequence}
            </if>
        </where>
    </select>

    <select id="allot" resultType="Integer">
        SELECT * FROM
        <include refid="entity"/>
        WHERE
        lockId = #{lockId} AND type = #{type}
    </select>

</mapper>
